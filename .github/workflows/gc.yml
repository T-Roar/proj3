# proj

name: Terraform Deployment

on:
  push:
    branches:
      - master

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.5

    - name: Authenticate with Google Cloud
      uses: google-github-actions/setup-gcloud@v0.3.0
      with:
        service_account_key: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

    - name: Set Google Cloud environment variables
      run: |
        echo '{"type":"service_account","project_id":"'${{ secrets.GCP_PROJECT_ID }}'","private_key_id":"'${{ secrets.GCP_PRIVATE_KEY_ID }}'","private_key":"'${{ secrets.GCP_PRIVATE_KEY }}'","client_email":"'${{ secrets.GCP_CLIENT_EMAIL }}'","client_id":"'${{ secrets.GCP_CLIENT_ID }}'","auth_uri":"https://accounts.google.com/o/oauth2/auth","token_uri":"https://oauth2.googleapis.com/token","auth_provider_x509_cert_url":"'${{ secrets.GCP_AUTH_PROVIDER_X509_CERT_URL }}'","client_x509_cert_url":"'${{ secrets.GCP_CLIENT_X509_CERT_URL }}'"}' > key.json
        gcloud auth activate-service-account --key-file=key.json
        export GOOGLE_APPLICATION_CREDENTIALS=$(pwd)/key.json
        export GOOGLE_PROJECT=${{ secrets.GCP_PROJECT_ID }}
        export GOOGLE_ACCESS_TOKEN=$(gcloud auth print-access-token)

    - name: Initialize Terraform
      run: |
        terraform init
        terraform validate

    - name: Plan Terraform changes
      run: terraform plan -out=tfplan

    - name: Apply Terraform changes
      run: terraform apply -auto-approve tfplan

    - name: Show GKE Cluster Information
      run: |
        echo "Cluster Endpoint: ${{ steps.apply.outputs.cluster_endpoint }}"
        echo "Master Version: ${{ steps.apply.outputs.cluster_master_version }}"

    - name: Docker build and push to GCR
      run: |
        docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/static-website:latest .
        cat gcr-key.json | docker login -u _json_key --password-stdin https://gcr.io
        docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/static-website:latest

    - name: Configure kubectl
      run: |
        gcloud container clusters get-credentials ${{ secrets.GKE_CLUSTER_NAME }} --region ${{ secrets.GKE_CLUSTER_REGION }}

    - name: Deploy to GKE
      run: |
        kubectl apply -f k8s/deployment.yaml
        kubectl apply -f k8s/service.yaml



